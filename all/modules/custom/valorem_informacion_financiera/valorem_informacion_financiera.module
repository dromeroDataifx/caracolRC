<?php

function valorem_informacion_financiera_init() {
    drupal_add_css(drupal_get_path('theme', 'theme_valorem') . '/css/generalv5.less');
}

function valorem_informacion_financiera_menu() {
    $items['pyg/puc/%'] = array(
        'title' => t('PUC information service'),
        'description' => t('PUC information service'),
        'page callback' => 'puc_information_service',
        'access arguments' => array('access content'),
        'page arguments' => array(2),
        'type' => MENU_LOCAL_TASK,
    );
    return $items;
}

/**
 * Implements hook_block_info().
 */
function valorem_informacion_financiera_block_info() {
    $blocks = array();
    $blocks['estados-financieros'] = array(
        'info' => t('Estados Financieros')
    );
    $blocks['info2'] = array(
        'info' => t('informacion financiera formulario')
    );
    $blocks['estado-resultados'] = array(
        'info' => t('Estado de Resultados')
    );
    $blocks['balance-general'] = array(
        'info' => t('Balance General')
    );
    return $blocks;
}

/**
 * Implements hook_block_view
 */
function valorem_informacion_financiera_block_view($delta = '') {
    $block = array();
    switch ($delta) {
        case 'estados-financieros':
            $block['subject'] = '<p class = "title">' . t('Estados Financieros') . ' (' . t('Millones de pesos') . ')</p>' . drupal_render(drupal_get_form('informacion_financiera_form'));
            $block['content'] = informacion_financiera_page();
            break;
        case 'info2':
            //$block['content'] = drupal_get_form('informacion_financiera_form');
            break;
        case 'estado-resultados':
            $block['subject'] = t('Estado de Resultados');
            $block['content'] = theme('estado_resultados');
            break;
        case 'balance-general':
            $block['subject'] = t('Balance General');
            $block['content'] = theme('balance_general');
            break;
        default:
            # code...
            break;
    }

    return $block;
}

function valorem_informacion_financiera_theme() {
    $path = drupal_get_path('module', 'valorem_informacion_financiera');
    return array(
        'estado_resultados' => array(
            'path' => "{$path}/theme",
            'variables' => array('data' => NULL),
            'file' => 'valorem_informacion_financiera.theme.inc',
            'template' => "file-list",
        ),
        'balance_general' => array(
            'path' => "{$path}/theme",
            'variables' => array('data' => NULL),
            'file' => 'valorem_informacion_financiera.theme.inc',
            'template' => "file-list",
        ),
        'render_tablas' => array(
            'path' => "{$path}/theme",
            'variables' => array('data' => NULL),
            'file' => 'valorem_informacion_financiera.theme.inc',
            'template' => "tables",
        )
    );
}

function informacion_financiera_page() {
    $res = '';
    $id = 0;
    $i = 10;
    if (isset($_GET['id'])) {
        $id = $_GET['id'];
    } else {

        $id = trimestre_actual4();
        $id = $id['id'];
    }
    $array_puc = array();
    $array_pyg = array();
    $discriminacion = array();
    /**
     * Arreglar la condicion para el ultimo reporte
     */
    if ($id != 0) {
        $cache_informacion_financiera = cache_get('informacion_financiera' . $id, 'cache');
        if ($cache_informacion_financiera && false) {
            $array_puc = $cache_informacion_financiera->data;
        } else {
            $array_puc = array();
            $array_puc['puc'] = informacion_financiera_puc($id);
            //informacion_financiera_pyg($id);
            $discriminacion = informacion_financiera_discriminacion($id);
            $accionistas = informacion_financiera_accionistas();
            $accionistas = array();
            $array_puc['puc'][0]['A'] = array(
                'nombre' => '20 Principales accionistas',
                'valor' => '',
            );
            $array_puc['puc'][1]['A1'] = array(
                'nombre' => '20 Principales accionistas',
                'valor' => '',
            );
            foreach ($accionistas as $key => $value) {
                $array_puc['puc'][2]['A1' . $i] = $value;
                $i++;
            }
            foreach ($discriminacion[0] as $key => $value) {
                $array_puc['puc'][0][$key] = $value;
            }
            foreach ($discriminacion[1] as $key => $value) {
                $array_puc['puc'][1][$key] = $value;
            }
            foreach ($discriminacion[2] as $key => $value) {
                $array_puc['puc'][2][$key] = $value;
            }
            foreach ($discriminacion[3] as $key => $value) {
                $array_puc['puc'][3][$key] = $value;
            }
            //cache_set('informacion_financiera'.$id, $array_puc, 'cache');
        }
        //dpm($array_puc);
        return informacion_financiera($array_puc);
    }
    return t('No existen reportes <br> para cargar informe trimestral, presione') . ' <a href= "#admin/config/user-interface/file_upload">' . t('aqu√≠') . '</a>';
}

/**
 * Function contruccion arreglo con clases, grupos cuentas y subcuentas de (activos / pasivos / patrimonio)
 */
function informacion_financiera_puc($id) {
    $query = db_select('estados_financieros', 'fd')
            ->fields('fd')
            ->condition('est_id_fecha', $id, '=')
            ->execute();
    $array_clase = array();
    $array_grupo = array();
    $array_cuenta = array();
    $array_subcuenta = array();

    foreach ($query as $value) {


        $puc = taxonomy_term_load($value->est_entity_id);
        if (isset($puc->field_nivel['und'][0]['value'])) {
            $codpuc = $puc->field_codigo_puc['und'][0]['value'];
            $namepuc = $puc->name;
            $valor = $value->est_valor_reportado;
            if (substr($codpuc, 0, 1) == 1 || substr($codpuc, 0, 1) == 2 || substr($codpuc, 0, 1) == 3 || substr($codpuc, 0, 1) == 4 || substr($codpuc, 0, 1) == 5 || substr($codpuc, 0, 1) == 6) {

                if (strlen($codpuc) == 1) {
                    $array_clase[$codpuc] = array(
                        'nombre' => $namepuc,
                        'valor' => $valor,
                    );
                }
                if (strlen($codpuc) == 2) {
                    $array_grupo[$codpuc] = array(
                        'nombre' => $namepuc,
                        'valor' => $valor,
                    );
                }
                if (strlen($codpuc) == 4) {
                    $array_cuenta[$codpuc] = array(
                        'nombre' => $namepuc,
                        'valor' => $valor,
                    );
                }
                if (strlen($codpuc) == 6) {
                    $array_subcuenta[$codpuc] = array(
                        'nombre' => $namepuc,
                        'valor' => $valor,
                    );
                }
            }
        }
    }

    return array(
        $array_clase, $array_grupo, $array_cuenta, $array_subcuenta
    );
}

function cargar_js_and_css() {
    $thisModulePath = drupal_get_path('module', 'valorem_informacion_financiera');
    drupal_add_js("{$thisModulePath}/js/accounting.min.js");

    drupal_add_js("{$thisModulePath}/js/valorem_informacion_financiera.js");
    drupal_add_css("{$thisModulePath}/css/estilos.css");

    drupal_add_js("{$thisModulePath}/js/jquery.cycle.all.min.js");
    drupal_add_js("{$thisModulePath}/js/presentationCycle.js");
    drupal_add_css("{$thisModulePath}/css/presentationCycle.css");
}

function periodos4() {
    $fechas_orden = arreglo_fechas4();
    $new_arreglo = array();
    $fecha_anterior = 0;
    $i = 0;
    foreach ($fechas_orden as $key => $value) {
        if ($fecha_anterior != substr($value['fecha'], 0,4)) {
            $i = 1;
        }
        $new_arreglo['-----  '.substr($value['fecha'], 0,4).'  -----']['P'.$i] = array(
            $value['id'] => $value['fecha'],
        );
        $i++;
        $fecha_anterior = substr($value['fecha'], 0,4);
    }
  return array(
      'Periodo' => 'Periodo',
        '' => $new_arreglo
    );
}

function trimestre_actual4() {
    $id = 0;
    $fechas = arreglo_fechas4();
    $cont = 0;
    foreach ($fechas as $value) {
        $cont++;
    }
    if ($cont == 1) {
        $id = $fechas[$cont-1]['id'];   
    }
    else {
        $id = $fechas[$cont-1];
    }
    return $id;
}

function arreglo_fechas4() {
    $query = db_query('select * from fecha');
    $str_fecha = '';
    $fechas_orden = array();
    foreach ($query as $key => $value) {
        $str_fecha = $value->fec_fecha;
        if (strlen($str_fecha) != 8) {
            $str_fecha = '0'.$str_fecha;
        } 
        $dd = substr($str_fecha, 0,2);
      $mm = substr($str_fecha, 2,2);
        $yy = substr($str_fecha, 4,4);
        $fecha = date('Y/m/d', strtotime($yy.'-'.$mm.'-'.$dd));
        $fechas_orden[$fecha] = array(
            'fecha' => $fecha,
            'id' => $value->fec_id_fecha,
        );
    }
// ordena desde ano, mes , dia
    sort($fechas_orden);
    return $fechas_orden;
}
/**
*   function para discriminacion de inversiones retorna arreglo en formato especial
*   para trabajas a 2 niveles de profundidad 
*/
function informacion_financiera_discriminacion($id) {
    $array_a = array();
    $array_b = array();
    $array_c = array();
    $array_d = array(); 
    
    $datos = db_select('discriminacion_inversiones', 'fd')
    ->fields('fd')
    ->condition('dis_fecha', $id , '=')
    ->execute();
    
    $array_a['M'] = array(
        'nombre' => 'DISCRIMINACION DE INVERSIONES EN ACCIONES POR AGENTE RECEPTOR',
        'valor' => ''
    );
    $array_b['M1'] = array(
        'nombre' => 'DISCRIMINACION DE INVERSIONES EN ACCIONES POR AGENTE RECEPTOR',
        'valor' => ''
    );
    $i = 10;
    $nombre = '';
    foreach ($datos as $key => $value) {
        if ($value->dis_identificacion != NULL) {
            $nom= db_select('accionistas', 'fd')
                ->fields('fd', array('acc_accionista'))
            ->condition('acc_identificacion', $value->dis_identificacion , '=')
            ->execute();
            if ($nom != NULL) {
                foreach ($nom as $key2 => $value2) {
                    $nombre =$value2->acc_accionista ;
                }
                $array_c['M1'.$i] = array(
                    'nombre' => $nombre,
                    'valor' => str_replace(',','',$value->dis_acciones_total)
                );
                $array_d['M1'.$i.'01'] = array(
                    'nombre' => 'IDENTIFICACION',
                    'valor' => ' ' . $value->dis_identificacion,
                );
                $array_d['M1'.$i.'02'] = array(
                    'nombre' => 'ACCIONES ORDINARIAS',
                    'valor' => str_replace(',','',$value->dis_acciones_ordinarias)
                );
                $array_d['M1'.$i.'03'] = array(
                    'nombre' => 'ACCIONES CON DIVIDENDO PRENCIAL SIN VOTO',
                    'valor' => str_replace(',','',$value->dis_acciones_dividendo)
                );
                $array_d['M1'.$i.'04'] = array(
                    'nombre' => 'ACCIONES PRIVILEGIADAS ',
                    'valor' => str_replace(',','',$value->dis_acciones_privilegiadas)
                );
                $array_d['M1'.$i.'05'] = array(
                    'nombre' => 'PARTICIPACION TOTAL ACCIONES SOCIEDAD RECEPTORA',
                    'valor' => $value->dis_acciones_participacion,
                );
                $array_d['M1'.$i.'06'] = array(
                    'nombre' => 'CUOTAS O PARTES DE INTERES SOCIAL',
                    'valor' => ' ' . $value->dis_cuotas . '%'
                );
                $array_d['M1'.$i.'07'] = array(
                    'nombre' => 'PARTI. EN TOTAL CUOTAS O PARTES INTERES SOCIAL',
                    'valor' => str_replace(',','',$value->dis_cuotas_participacion)
                );
            } 
        } else {
            //dpm();
            // no documento totales renglon 099 - 999
        }
        //contruir formato array 
        $i++;
    }
    return array(
   $array_a, $array_b, $array_c, $array_d
 );
}

/**
*   function para el retorno de los 20 pples accionistas 
*/
function informacion_financiera_accionistas() {
    $id = trimestre_actual4();
    $accionistas = array();
    $nombre = '';
    $resultado = db_query(
    'SELECT a.acc_accionista, b.par_saldo, b.par_porcentaje
    FROM valorem_accionistas a, valorem_participacion b
    WHERE a.acc_cuenta = b.par_cuenta
    ORDER BY b.par_saldo DESC 
    LIMIT 0 , 19'
  );

  if ($resultado != NULL) {
    foreach ($resultado as $key => $value) {
            $accionistas[] = array(
                'nombre' => $value->acc_accionista,
                'valor' => $value->par_saldo,
                'porcen' => $value->par_porcentaje
            );  
    }
  }
    return $accionistas;
}

function create_pyg_table($array_puc) {

    $grupos = $array_puc["puc"][1];
    
    for(  $i=40;  $i<=70  ;  $i++) {
        if( !ISSET( $grupos[$i] ) ) {
            $grupos[$i] = array("valor"=>0,"nombre"=>"");
        }
    }
    
    $ingresosOperacionales      = $grupos[41]["valor"];
    $costos                     = $grupos[61]["valor"]+$grupos[62]["valor"];
    $utilidadBruta              = $ingresosOperacionales - $costos;
    $gastosOperacionales        = $grupos[51]["valor"] + $grupos[52]["valor"];
    $utilidadOperacional        = $utilidadBruta - $gastosOperacionales;
    $NoOperacionales            = $grupos[42]["valor"] - $grupos[53]["valor"];
    $utilidadAntesImpuestos     = $utilidadOperacional + $NoOperacionales;
    $impuestoRenta              = $grupos[54]["valor"];
    $utilidadDelEjercicio       = $utilidadAntesImpuestos - $impuestoRenta;
    
    $utilidadBruta_detalle_html = '';
    foreach( $array_puc["puc"][2] as $indice=>$item ) {
        if(            strpos(  ((string)$indice)  ,"61")    ||          strpos(  ((string)$indice)  ,"62")            ) {
            $utilidadBruta_detalle_html .= '
                <h6 class="resta">
                    <div class="title">' . $item["nombre"] . '</div>
                    <div class="simbol">-</div>
                    <div class="value">' . formato_millones($item["valor"]) . '</div>
                </h6>
            ';
        }
    }
    
    $utilidadOperacional_detalle_html = '';
    foreach( $array_puc["puc"][2] as $indice=>$item ) {
        if(            strpos(  ((string)$indice)  ,"51")    ||          strpos(  ((string)$indice)  ,"52")            ) {
            $utilidadOperacional_detalle_html .= '
                <h6 class="resta">
                    <div class="title">' . $item["nombre"] . '</div>
                    <div class="simbol">-</div>
                    <div class="value">' . formato_millones($item["valor"]) . '</div>
                </h6>
            ';
        }
    }
    
    $utilidadAntesImpuestos_detalle_html = '';
    foreach( $array_puc["puc"][2] as $indice=>$item ) {
        if(            strpos(  ((string)$indice)  ,"42")    ||          strpos(  ((string)$indice)  ,"53")            ) {
            $utilidadAntesImpuestos_detalle_html .= '
                <h6 class="' .  (  (      strpos(     (string)$indice  ,"42")  )?'suma':'resta'        )  . '">
                    <div class="title">' . $item["nombre"] . '</div>
                    <div class="simbol">' .  (  (      strpos(     (string)$indice  ,"42")  )?'+':'-'        )  . '</div>
                    <div class="value">' . formato_millones($item["valor"]) . '</div>
                </h6>
            ';
        }
    }
    
    $utilidadDelEjercicio_detalle_html = '';
    foreach( $array_puc["puc"][2] as $indice=>$item ) {
        if(            strpos(  ((string)$indice)  ,"54")        ) {
            $utilidadDelEjercicio_detalle_html .= '
                <h6 class="resta">
                    <div class="title">' . $item["nombre"] . '</div>
                    <div class="simbol">-</div>
                    <div class="value">' . formato_millones($item["valor"]) . '</div>
                </h6>
            ';
        }
    }
    
    $html = '
        <div id="pygcontainer">         
            <h4 class="pygtitle">
                <div class="title">Ingresos operacionales</div>
                <div class="simbol">+</div>
                <div class="simbol-equal">=</div>
                <div class="value">' . formato_millones($ingresosOperacionales) . '</div>
            </h4>
                <h5 rel="6">
                    <div class="title subtitle">Costos</div>
                    <div class="value">' . formato_millones($costos) . '</div>
                    <div class="content"></div>
                </h5>
            <div rel="utilidadBruta" class="detalle">
                ' . $utilidadBruta_detalle_html . '
            </div>
            <h4 class="pygtitle" rel="utilidadBruta">
                <div class="title">Utilidad bruta</div>
                <div class="simbol">+</div>
                <div class="simbol-equal">=</div>
                <div class="value">' . formato_millones($utilidadBruta) . '</div>
            </h4>
                <h5 rel="5">
                    <div class="title">Gastos operacionales</div>
                    <div class="value">' . formato_millones($gastosOperacionales) . '</div>
                    <div class="content"></div>
                </h5>
            <div rel="utilidadOperacional" class="detalle">
                ' . $utilidadOperacional_detalle_html . '
            </div>
            <h4 class="pygtitle" rel="utilidadOperacional">
                <div class="title">Utilidad operacional</div>
                <div class="simbol">+</div>
                <div class="simbol-equal">=</div>
                <div class="value">' . formato_millones($utilidadOperacional) . '</div>
            </h4>
                <h5 rel="42">
                    <div class="title">Ingresos no operacionales</div>
                    <div class="value">' . formato_millones($grupos[42]["valor"]) . '</div>
                    <div class="content"></div>
                </h5>
                <h5 rel="53">
                    <div class="title">Gastos no operacionales</div>
                    <div class="value">' . formato_millones($grupos[53]["valor"]) . '</div>
                    <div class="content"></div>
                </h5>
            <div rel="utilidadAntesImpuestos" class="detalle">
                ' . $utilidadAntesImpuestos_detalle_html . '
            </div>
            <h4 class="pygtitle" rel="utilidadAntesImpuestos">
                <div class="title">Utilidad antes de impuestos</div>
                <div class="simbol">+</div>
                <div class="simbol-equal">=</div>
                <div class="value">' . formato_millones($utilidadAntesImpuestos) . '</div>
            </h4>
                <h5 rel="54">
                    <div class="title">Impuesta de renta</div>
                    <div class="value">' . formato_millones($impuestoRenta) . '</div>
                    <div class="content"></div>
                </h5>
            <div rel="utilidadEjercicio" class="detalle">
                ' . $utilidadDelEjercicio_detalle_html . '
            </div>
            <h4 class="pygtitle" rel="utilidadEjercicio">
                <div class="title">Utilidad del ejercicio</div>
                <div class="simbol">+</div>
                <div class="simbol-equal">=</div>
                <div class="value">' . formato_millones($utilidadDelEjercicio) . '</div>
            </h4>
        </div>
    ';
    
    return $html;

}

function probarSumaProbables($arreglo,$indice=null,$signos) {
    
    /*
     * Esta funci√≥n prueba los diferentes valores en arreglo, dados los signos
    */
    
    $total = 0;
    
    foreach($arreglo as $cuenta=>$item) {
    
        $valor = 0;
        if( $indice==null ) {
            $valor = $item;
        } else {
            $valor = (ISSET($item[$indice])?$item[$indice]:0);
        }
        $total += $valor * (ISSET($signos[$cuenta])?$signos[$cuenta]:0)  ;
    
    }
    return $total;
    
    
}

function informacion_financiera($array_puc) {

    require_once('translate.inc');
    
    for( $i=0;$i<4;$i++ ) {
        foreach($array_puc['puc'][$i] as $key=>$value) {
            $array_puc['puc'][$i][(int)$key]["nombre"] = _t((int)$key,$value["nombre"]);
        }
    }
    
    //$array_puc['puc'][1][36]["valor"] = abs((int)$array_puc['puc'][1][36]["valor"]) * -1;
    $laSumaDa = false;
    $posibilidades = array();
    $posibilidades[] = array(31=>'1',32=>'1',33=>'1',34=>'1',35=>'1',36=>'1',37=>'1',38=>'1',39=>'1');
    $posibilidades[] = array(31=>'1',32=>'1',33=>'1',34=>'1',35=>'1',36=>'-1',37=>'1',38=>'1',39=>'1');
    $posibilidades[] = array(31=>'1',32=>'1',33=>'1',34=>'1',35=>'1',36=>'1',37=>'-1',38=>'1',39=>'1');
    $posibilidades[] = array(31=>'1',32=>'1',33=>'1',34=>'1',35=>'1',36=>'-1',37=>'-1',38=>'1',39=>'1');
    foreach( $posibilidades as $posibilidad ) {
        $num1 = ( probarSumaProbables($array_puc['puc'][1],"valor",$posibilidad) );
        $num2 = ( (float)$array_puc['puc'][0][3]["valor"] );
        if(  ' '.$num1 == ' '.$num2  ) {
            $laSumaDa = true;
            foreach( $posibilidad as $indice=>$signo ) {
                if( ISSET($array_puc['puc'][1][$indice]["valor"]) ) {
                    $array_puc['puc'][1][$indice]["valor"] *= $signo;
                }
            }
            break;
        }       
    }

        if(!$laSumaDa && false) {
            //Si la suma no da, generamos todos los posibles valores
            for($i = 0; $i<= 512; $i++) {
                $posibles = str_pad(decbin($i),9,0,STR_PAD_LEFT);
                $posible = array();
                for($j = 0;$j <= strlen($posibles); $j++) {
                    if( substr($posibles,$j,1) == 0 ) {
                        $posibles[31+$j] = -1;
                    } else {
                        $posibles[31+$j] = 1;
                    }
                }
                $posibilidades[] = $posible;
            }
            
            
            foreach( $posibilidades as $posibilidad ) {
                $num1 = ( probarSumaProbables($array_puc['puc'][1],"valor",$posibilidad) );
                $num2 = ( (float)$array_puc['puc'][0][3]["valor"] );
                if(  ' '.$num1 == ' '.$num2  ) {
                    $laSumaDa = true;
                    foreach( $posibilidad as $indice=>$signo ) {
                        if( ISSET($array_puc['puc'][1][$indice]["valor"]) ) {
                            $array_puc['puc'][1][$indice]["valor"] *= $signo;
                        }
                    }
                    break;
                }       
            }
            
        }
    
    
    cargar_js_and_css();
    $html_js  = 'infoFinanciera_data = {};';
    $html_js .= 'infoFinanciera_data.clases         = ' . json_encode( $array_puc['puc'][0] ) . ';';
    $html_js .= 'infoFinanciera_data.grupos         = ' . json_encode( $array_puc['puc'][1] ) . ';';
    $html_js .= 'infoFinanciera_data.cuentas        = ' . json_encode( $array_puc['puc'][2] ) . ';';
    $html_js .= 'infoFinanciera_data.subcuentas     = ' . json_encode( $array_puc['puc'][3] ) . ';';

//drupal_add_js( drupal_get_path('module', 'valorem_informacion_financiera'). '/js/valorem_informacion_financiera.js' );
    drupal_add_js( $html_js, array('type' => 'inline', 'scope' => 'footer', 'weight' => 5) );

//Armamos PYG
$enlaces_pyg_html = '';
for($i = 4; $i <= 7; $i++) {
    if( ISSET($array_puc["puc"][0][$i]) ) {
        $enlaces_pyg_html .= '
                <a rel="' . $i . '" href="#" value="pyg-item" class="clase pyg-item">
                    <div class="title">
                        <h2>' . $array_puc["puc"][0][$i]["nombre"] . '</h2>
                        <span class="valor">' . $array_puc["puc"][0][$i]["valor"] . '</span>
                    </div>
                    <div class="content"></div>
                </a>';
    }       
}

//Armamos Sociedades
$enlaces_sociedades_html = '
            <a rel="M1" class="row first pc_item">
                <div class="subtitle">
                    <h3>SOCIEDADES RELACIONADAS</h3>
                    <span class="valor"></span>
                </div>
                <div class="content"></div>
            </a>';


//Armamos Accionistas
$enlaces_sociedades_html = '
            <a rel="M1" class="row first pc_item">
                <div class="subtitle">
                    <h3>SOCIEDADES RELACIONADAS</h3>
                    <span class="valor"></span>
                </div>
                <div class="content"></div>
            </a>';




return '<div id="clases">
        <a rel="1" href="#" value="activos" class="clase activos">
            <div class="title">
                <h2>' . _t(1,'Activos') . '</h2>
                <span class="valor"></span>
            </div>
            <div class="content"></div>
        </a>
        <a rel="2" href="#" value="pasivos" class="clase pasivos">
            <div class="title">
                <h2>' . _t(2,'Pasivos') . '</h2>
                <span class="valor"></span>
            </div>
            <div class="content"></div>
        </a>            
        <a rel="3" href="#" value="patrimonios" class="clase patrimonios">
            <div class="title">
                <h2>' . _t(3,'Patrimonio') . '</h2>
                <span class="valor"></span>
            </div>
            <div class="content"></div>
        </a>
        <!--<a id="sociedadesbutton" rel="M1" href="#" value="sociedades" class="clase sociedades">
            <div class="title">
                <h2>Sociedades<br>Relacionadas</h2>
                <span class="valor"></span>
            </div>
            <div class="content">
                <div class="data"></div>
            </div>
        </a>
        <a rel="A1" href="#" value="accionistas" class="clase accionistas">
            <div class="title">
                <h2>Accionistas</h2>
                <span class="valor"></span>
            </div>
            <div class="content"></div>
        </a>
        <div id="pgybutton" rel="PYG" href="#" value="pyg" class="clase pyg">
            <div class="title">
                <h2>PYG</h2>
                <span class="valor"></span>
            </div>
            <div class="content"><div class="data"></div></div>
        </div>-->
    </div>
    <div id="pygcontent">' . create_pyg_table($array_puc) . '</div>
    <div id="sociedadescontent">' . $enlaces_sociedades_html . '</div>      
';
    }   
/**
* Formulario Informacion financiera  
*/
function informacion_financiera_form($form, &$form_state) {
  $trimestre_actual = trimestre_actual4();
  $form['periodo'] = array(
    '#type' => 'select',
    '#options' => periodos4(),
    '#default_value' => isset ($_GET['id']) ? $_GET['id'] : $trimestre_actual,
  );
    $form['submit'] = array(
        '#type' => 'submit', 
        '#value' => t('Consultar')
    );
   return $form;
}

function informacion_financiera_form_submit($form, &$form_state) {
    $fecha = db_query(
    'SELECT fec_id_fecha FROM fecha WHERE fec_fecha = ' . $form_state['values']['periodo']
    );
    $id_fecha = $form_state['values']['periodo']; 
    if ($fecha != NULL) {
        foreach ($fecha as $key => $value) {
            $id_fecha = $value->fec_id_fecha;   
        }
    }
    $form_state['redirect'] = array('inversionistas/bolsa-de-valores', array('query' => array('id'=>$id_fecha)));
}

/**
 *  Retorna un arreglo con las fechas existentes
 *  segun archivos almacenados
 */
function info_trimenstres() {
  $result = db_query('SELECT * FROM fecha ORDER BY fecha.fec_id_fecha DESC');
  $fechas = array();
  $ant = '';
  // agrupa por ano
  foreach ($result as $key => $value) {
    $formato_fecha = substr($value->fec_fecha, 0,2).'-'.substr($value->fec_fecha, 2,2).'-'.substr($value->fec_fecha, 4,4);
    if ($ant == substr($value->fec_fecha, 4,4)) {
      array_push($fechas[$ant], array($value->fec_fecha => $formato_fecha));
    } else {
      $fechas[substr($value->fec_fecha, 4,4)][] = array(
        $value->fec_fecha => $formato_fecha,
      );
      $ant = substr($value->fec_fecha, 4,4);
    }
  }
  // reajusta el arreglo
  $aux = array();
  $list_fecha = array();
  foreach ($fechas as $key => $value) {
    $aux = array();
    $cont = 1;
    foreach ($fechas[$key] as $key2 => $value) {
      //$aux[key($value)] = $value[key($value)];
      $aux[key($value)] = $cont.'¬∞ Trimestre';
      $cont++;
    }
    $list_fecha[$key] = $aux;
  }
  return $list_fecha;
}


function formato_millones($a) {
    return $a;
}